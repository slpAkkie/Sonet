<?php

namespace App\Exceptions;

use App\Http\Resources\ApiTokenAuthorizationResource;
use App\Http\Resources\LoginFailedResource;
use App\Http\Resources\ModelNotFoundResource;
use App\Http\Resources\NotFoundHttpResource;
use App\Http\Resources\ValidationFailedResource;
use Illuminate\Database\Eloquent\ModelNotFoundException;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Illuminate\Support\Collection;
use Illuminate\Validation\ValidationException;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;
use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * A list of the exception types that are not reported.
     *
     * @var array
     */
    protected $dontReport = [
        //
    ];

    /**
     * A list of the inputs that are never flashed for validation exceptions.
     *
     * @var array
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     *
     * @return void
     */
    public function register()
    {
        $this->reportable(function (Throwable $e) {
            //
        });
    }

    public function render($request, Throwable $e)
    {
        if ($e instanceof NotFoundHttpException) return NotFoundHttpResource::make();
        elseif ($e instanceof ModelNotFoundException) return ModelNotFoundResource::make($e->getModel());
        elseif ($e instanceof ApiTokenAuthorizationException) return ApiTokenAuthorizationResource::make();
        elseif ($e instanceof UserNotFoundException || $e instanceof PasswordIncorrectException) return LoginFailedResource::make();
        elseif ($e instanceof ValidationException) return ValidationFailedResource::make(
            Collection::make($e->errors())
                ->map(function ($i) {
                    return join(', ', $i);
                })
        );
        else dd($e);
        // return parent::render($request, $e); // TODO: Change the autogenerated stub
    }
}
